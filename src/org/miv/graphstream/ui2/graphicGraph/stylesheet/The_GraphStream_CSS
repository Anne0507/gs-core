Here is a description of the CSS language used by GraphStream. Where possible, this language is
kept coherent with the uses of the HTML CSS, but naturally, this is not always possible.

The selectors
=============

There are four main selectors :

graph
	To add style to the whole graph.
node
	To add style to node elements.
edge
	To add style to edge elements.
sprite
	To add style to sprite elements.
	
The selectors can then be augmented by elements identifiers, classes names and events. Here is the
syntax for classes :

node.myClassName 

Here is the syntax for elements identifiers :

node#A

Here is the syntax for events :

node:selected

node#A:selected

node.myClassName:selected

The selectors tell to what elements the style applies. The combination of identifiers, classes
and events allows to select specific elements, and event specific elements at a given condition
during time.

The style properties
====================

Given a selector the style is described by a set of style properties, given between curly braces
and separated by semicolons.

Here is an example of style definition :

node.foo:selected { fill-color: red; }

Some considerations on the meaning of styles
============================================

One could think that the node style inherits the graph style for example. However this is not
the case. The graph style applies to the background of the graph, however it can also
allow to define a general style.

The common properties
=====================

These properties apply to all elements :

z-index:
	<number[int]>

fill:
	none
	plain
	dyn-plain(ui.color)
	gradient-radial
	gradient-horizontal
	gradient-vertical
	image-tiled
	image-adjusted
	image-zoomed

fill-color:
	<color(1,n)>

fill-image:
	<url>

stroke:
	none
	plain
	dashes
	dots

stroke-color:
	<color(1,n)>

stroke-width:
	number
	
shadow:
	none
	plain
	gradient-radial
	gradient-shape
	gradient-horizontal
	gradient-vertical

shadow-color:
	<color(1)>

shadow-width:
	<number[px,gu,%]>

padding:
	<number(1)>

text-mode:
	normal
	truncated
	hidden
	at-zoom
	under-zoom
	over-zoom
	zoom-range
	zooms
	
text-visibility:
	<number(1,n)>

text-color:
	<color>

text-style:
	simple
	italic
	bold
	bold-italic

text-font:
	<string>

text-size:
	<number[pt]>

text-offset:
	<number(1,3)[px,gu,%]>

visibility-mode:
	normal
	hidden
	zoom-range
	dyn-zoom-range(ui.zoom-range)

visibility:
	<number(1,n)>

Properties common to nodes, edges and sprites
=============================================

size-mode:
	normal
	dyn-size(ui.size)

size:
	<number(3)[px,gu,%]>
	
shape-points:
	<number(1,n)[%]>
	
text-alignment:
	center
	left
	right
	at-left
	at-right
	under
	above

Properties common to nodes and sprites
======================================

shape:
	circle
	box
	diamond
	polygon
	text-box
	text-circle
	text-diamond

Properties for nodes
====================

Properties for sprites
======================

shape:
	<general-shapes>
	pie-chart
	flow
	arrow
	images

sprite-orientation:
	none
	from
	to
	origin

Properties for edges
====================

shape:
	line
	angle
	cubic-curve
	polyline
	
text-alignment:
	center
	along	

arrow-shape:
	none
	arrow
	circle
	image

arrow-image:
	<url>
	
arrow-size:
	<number(1,3)[px,gu,%]>

Properties for graphs
=====================
